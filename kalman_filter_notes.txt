Kalman Filter

0.001 * 0.8 = 0.0008
0.999 * 0.1 = 0.0999

0.0008 / 0.1007 = 0.00794
0.0999 / 0.1007 = 0.992

P(fair) = (P(H) * P(fair | H) + P(P(H | loaded)) = (0.5 * 0.5) + (0.1 * 0.5) = 0.25 + 0.05 = 0.3

[ fair ][loaded]
[  0.5 ][  0.5 ]
_NA
[ fair|heads ][loaded|heads]
[ 0.5 * 0.5  ][ 0.1 * 0.5  ]
[   0.25     ][   0.05     ]

0.25 / (0.25 + 0.05) = 
0.05 / (0.25 + 0.05) = 


Kalman Filter equaations

- 1d Gaussian distribution
	- \frac{1}{\sqrt{2\pi\sigma^{2}}} \times e^{\frac{1}{2}\frac{(x-\mu)^{2}}{\sigma^{2}}}
	- (1.0 / math.sqrt(2.0 * math.pi * variance)) * math.exp(-0.5 * ((x - mean)**2 / variance))
	
- Update: Update a 1D gaussian state based prior state and a new measurement of the state (which is also a gaussian)
	- updated_mean = 1.0 / (variance_of_state + variance_of_measurement) * (variance_of_measurement * mean_of_state + variance_of_state * mean_of_measurement)
	- updated_variance = 1.0 / (1.0 / variance_of_state + 1.0 / variance_of_measurement)

- Predict: Change a 1D gaussian state to a new state with some uncertainty in the change (change is modelled as a gaussian)
	- predicted_mean = mean_of_state + mean_of_change
	- predicted_variance =  variance_of_state + variance_of_change
	
- motion
	- x is position
	- ẋ is the velocity or the change in position over time (dx/dt)
	- x' = x + ẋ is the updated position; the current position change in position over time